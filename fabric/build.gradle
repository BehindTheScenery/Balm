plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id "com.modrinth.minotaur" version "2.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
def buildNumber = System.getenv("GPR_BUILD_NUMBER") ?: "0"
version = project.mod_version + "+" + buildNumber
group = project.maven_group

repositories {
	// For CurseForge
	maven { url "https://www.cursemaven.com" }

	// For Cloth Config
	maven { url "https://maven.shedaniel.me/" }

	// For ModMenu
	// maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	// mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:5.0.34") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	//modImplementation "com.terraformersmc:modmenu:2.0.2"
	modImplementation "curse.maven:modmenu-308702:3821162"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

sourceSets {
	main {
		java {
			srcDirs '../shared/java/'
		}
		resources {
			srcDirs '../shared/resources/'
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = project.archivesBaseName

			from components.java
			artifact jar
		}
	}

	repositories {
		maven {
			var releasesRepoUrl = "https://nexus.twelveiterations.com/repository/maven-releases/"
			var snapshotsRepoUrl = "https://nexus.twelveiterations.com/repository/maven-snapshots/"
			url = uri(version.toString().endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl)
			name = "twelveIterationsNexus"
			credentials(PasswordCredentials::class)
		}
	}
}

curseforge {
	apiKey = project.findProperty("curseforge.api_key") ?: System.getenv("CURSEFORGE_TOKEN") ?: "none"
	project {
		id = project.curseforge_project_id
		releaseType = project.curseforge_release_type
		changelogType = 'markdown'
		changelog = file('../CHANGELOG.md')
		project.minecraft_versions.split(',').each {
			addGameVersion it
		}
		addGameVersion 'Fabric'

		relations {
			requiredLibrary 'fabric-api'
			requiredLibrary 'cloth-config'
		}

		mainArtifact(remapJar)

		afterEvaluate {
			uploadTask.dependsOn(remapJar)
		}
	}
	options {
		forgeGradleIntegration = false
	}
}

modrinth {
	token = project.findProperty("modrinth.token") ?: System.getenv("MODRINTH_TOKEN") ?: "none"
	projectId = project.modrinth_project_id
	versionType = project.modrinth_release_type
	versionNumber = project.version + "+fabric-" + project.minecraft_version
	uploadFile = remapJar
	changelog = rootProject.file("../CHANGELOG.md").text
	gameVersions = project.minecraft_versions.split(',').toList()
	syncBodyFrom = rootProject.file("../modrinth.md").text
	loaders = ['fabric']
	dependencies {
		required.project "fabric-api"
	}
}