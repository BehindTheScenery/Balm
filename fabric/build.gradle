plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

group = mod_group
archivesBaseName = "${mod_id}-fabric-${minecraft_version}"
version = mod_version

repositories {
    // For CurseForge
    maven { url "https://www.cursemaven.com" }

    // For Cloth Config
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

apply from: 'dependencies.gradle'

loom {
    runs {
        client {
            client()
            setConfigName("fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

sourceSets {
    main {
        java {
            srcDirs '../shared/java/'
        }
        resources {
            srcDirs '../shared/resources/'
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.mod_id + "-fabric"
            version = project.version + "+" + project.minecraft_version

            from components.java
            artifact jar
        }
    }

    repositories {
        maven {
            var releasesRepoUrl = "https://nexus.twelveiterations.com/repository/maven-releases/"
            var snapshotsRepoUrl = "https://nexus.twelveiterations.com/repository/maven-snapshots/"
            url = uri(version.toString().endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl)
            name = "twelveIterationsNexus"
            credentials(PasswordCredentials)
        }
    }
}

curseforge {
    apiKey = project.findProperty("curseforge.api_key") ?: System.getenv("CURSEFORGE_TOKEN") ?: "none"
    project {
        id = project.curseforge_fabric_project_id
        releaseType = project.curseforge_release_type
        changelogType = 'markdown'
        changelog = rootProject.file('CHANGELOG.md')
        project.minecraft_versions.split(',').each {
            addGameVersion it
        }
        addGameVersion 'Fabric'

        relations {
            requiredLibrary 'fabric-api'
            requiredLibrary 'cloth-config'
        }

        mainArtifact(remapJar)

        afterEvaluate {
            uploadTask.dependsOn(remapJar)
        }
    }
    options {
        forgeGradleIntegration = false
    }
}

modrinth {
    token = project.findProperty("modrinth.token") ?: System.getenv("MODRINTH_TOKEN") ?: "none"
    projectId = project.modrinth_project_id
    versionType = project.modrinth_release_type
    versionNumber = project.version + "+fabric-" + project.minecraft_version
    uploadFile = remapJar
    changelog = rootProject.file("CHANGELOG.md").text
    gameVersions = project.minecraft_versions.split(',').toList()
    syncBodyFrom = rootProject.file("modrinth.md").text
    loaders = ['fabric']
    dependencies {
        required.project "fabric-api"
    }
}