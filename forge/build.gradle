buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
		maven { url = "https://repo.spongepowered.org/maven" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath "com.modrinth.minotaur:Minotaur:2.+"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: "org.spongepowered.mixin"
apply plugin: 'maven-publish'
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: "com.modrinth.minotaur"

def buildNumber = System.getenv("GPR_BUILD_NUMBER") ?: "0"
version = project.mod_version + "+" + buildNumber
group = project.maven_group
archivesBaseName = project.mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: project.minecraft_version

    runs {
        client {
            workingDirectory project.file('run')

			arg "-mixin.config=balm.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'

            mods {
                balm {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

			arg "-mixin.config=balm.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            property 'forge.logging.console.level', 'debug'

            mods {
                balm {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

			arg "-mixin.config=balm.mixins.json"

            property "mixin.env.disableRefMap", "true"
            property "mixin.debug.export", "true"
            property "mixin.debug.export.decompile", "false"
            property "mixin.debug.verbose", "true"
            property "mixin.debug.dumpTargetOnFailure", "true"
            property "mixin.checks", "true"
            property "mixin.hotSwap", "true"

            args '--mod', 'balm-forge', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                balm {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
	main {
        java {
            srcDirs '../shared/java/'
        }
        resources {
            srcDirs '../shared/resources/'
            srcDirs 'src/generated/resources'
        }
		ext.refMap = "balm.refmap.json"
	}
}

repositories {
    maven { url "https://www.cursemaven.com" }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation("org.jetbrains:annotations:22.0.0")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : "BlayTheNinth",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "BlayTheNinth",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
				"MixinConfigs": "balm.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
			artifactId = project.archivesBaseName
			
            artifact jar
        }
    }
    repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/" + project.github_publish)
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
			}
		}
	}
}


curseforge {
    apiKey = project.findProperty("curseforge.api_key") ?: System.getenv("CF_API_KEY") ?: "none"
    project {
        id = project.curseforge_project_id
        releaseType = project.curseforge_release_type
        changelogType = 'markdown'
        changelog = file('../changelog.md')
        addGameVersion project.minecraft_version
        addGameVersion 'Forge'
    }
}

modrinth {
    token = project.findProperty("modrinth.token") ?: System.getenv("MODRINTH_TOKEN") ?: "none"
    projectId = project.modrinth_project_id
    versionType = project.modrinth_release_type
    uploadFile = jar
    changelog = rootProject.file("../changelog.md").text
    gameVersions = [project.minecraft_version]
    syncBodyFrom = rootProject.file("../modrinth.md").text
}